diff --git a/setup.py b/setup.py
index d196382..92f72c1 100644
--- a/setup.py
+++ b/setup.py
@@ -45,42 +45,16 @@ class CustomSDist(sdist):


 def build_native(spec):
-    cmd = ['cargo', 'build']
-    if not DEBUG_BUILD:
-        cmd.append('--release')
-        target = 'release'
-    else:
-        target = 'debug'
-
-    # Step 0: find rust sources
-    if not os.path.isfile('../cabi/Cargo.toml'):
-        scratchpad = tempfile.mkdtemp()
-        @atexit.register
-        def delete_scratchpad():
-            try:
-                shutil.rmtree(scratchpad)
-            except (IOError, OSError):
-                pass
-        zf = zipfile.ZipFile('rustsrc.zip')
-        zf.extractall(scratchpad)
-        rust_path = scratchpad + '/rustsrc/cabi'
-    else:
-        rust_path = '../cabi'
-        scratchpad = None
-
-    # Step 1: build the rust library
-    print('running `%s` (%s target)' % (' '.join(cmd), target))
+    # Step 1:V build the rust library
     build = spec.add_external_build(
-        cmd=cmd,
-        path=rust_path
+            cmd="true",
+        path="./rust/"
     )

     rtld_flags = ['NOW']
-    if sys.platform == 'darwin':
-        rtld_flags.append('NODELETE')
     spec.add_cffi_module(
         module_path='symbolic._lowlevel',
-        dylib=lambda: build.find_dylib('symbolic', in_path='target/%s' % target),
+        dylib=lambda: build.find_dylib('symbolic', in_path="target/release"),
         header_filename=lambda: build.find_header('symbolic.h', in_path='include'),
         rtld_flags=rtld_flags
     )
